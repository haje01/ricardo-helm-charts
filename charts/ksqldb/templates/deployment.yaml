apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ksqldb.fullname" . }}
  labels:
    {{- include "ksqldb.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ksqldb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ksqldb.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
        {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
        {{- toYaml . | nindent 8 }}
        {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          env:
            - name: KSQL_KSQL_SERVICE_ID
              value: "{{ include "ksqldb.service.id" . }}_ksqldb_"
            - name: KSQL_BOOTSTRAP_SERVERS
              value: {{ include "ksqldb.kafka.bootstrapServers" . | quote }}
            - name: KSQL_KSQL_STREAMS_BOOTSTRAP_SERVERS
              value: {{ include "ksqldb.kafka.bootstrapServers" . | quote }}
            - name: KSQL_KSQL_SCHEMA_REGISTRY_URL
              value: {{ include "ksqldb.schema-registry.url" . | quote }}
            - name: KSQL_KSQL_CONNECT_URL
              value: {{ include "ksqldb.kafka-connect.url" . | quote }}
            - name: KSQL_HEAP_OPTS
              value: {{ .Values.heapOpts  | quote}}
            - name: KSQL_LISTENERS
              value: "http://0.0.0.0:{{ .Values.port | int }}"
            - name: KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE
              value: {{ .Values.loggingProcessing.streamAutoCreate | quote }}
            - name: KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE
              value: {{ .Values.loggingProcessing.topicAutoCreate | quote }}
            - name: KSQL_CONFLUENT_SUPPORT_METRICS_ENABLE
              value: {{ .Values.confluentSupportMetricsEnable | quote }}
            - name: KSQL_KSQL_SINK_REPLICAS
              value: {{ .Values.internalTopicReplicas | quote }}
            - name: KSQL_KSQL_STREAMS_REPLICATION_FACTOR
              value: {{ .Values.internalTopicReplicas | quote }}
            - name: KSQL_KSQL_INTERNAL_TOPIC_REPLICAS
              value: {{ .Values.internalTopicReplicas | quote }}
            {{- if .Values.queriesFileConfigMap }}
            - name: KSQL_KSQL_QUERIES_FILE
              value: /etc/ksql/queries/queries.sql
            {{- end }}
            {{- if .Values.kerberos.enabled }}
            - name: KSQL_SECURITY_PROTOCOL
              value: SASL_PLAINTEXT
            - name: KSQL_SASL_MECHANISM
              value: GSSAPI
            - name: KSQL_SASL_KERBEROS_SERVICE_NAME
              value: kafka
            - name: KSQL_SASL_JAAS_CONFIG
              value: com.sun.security.auth.module.Krb5LoginModule required useKeyTab=true storeKey=true keyTab="/keytabs/{{ .Values.kerberos.serviceName }}.keytab" principal="{{ .Values.kerberos.serviceName }}@{{ .Values.kerberos.domain }}";
            {{- end }}
          ports:
            - name: tcp
              containerPort: {{ .Values.port }}
              protocol: TCP
          {{- if and .Values.livenessProbe.enabled (not .Values.queriesFileConfigMap) }}
          livenessProbe:
            httpGet:
              path: /
              port: tcp
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          {{- end }}
          {{- if and .Values.readinessProbe.enabled (not .Values.queriesFileConfigMap) }}
          readinessProbe:
            httpGet:
              path: 
              port: tcp
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
          {{- end }}
          volumeMounts:
          {{- if .Values.kerberos.enabled }}
          - name: krb5
            mountPath: /etc/krb5.conf
            subPath: krb5.conf
            readOnly: true
          - name: keytabs
            mountPath: /keytabs
            readOnly: true
          {{- end }}
          {{- if .Values.queriesFileConfigMap }}
          - name: ksql-queries
            mountPath: /etc/ksql/queries
          {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      {{- if .Values.kerberos.enabled }}
      - name: krb5
        configMap:
          name: {{ required "The .Values.kerberos.krb5Conf is required when kerberos enabled!" .Values.kerberos.krb5Conf }}
      - name: keytabs
        secret:
          secretName: {{ required "The .Values.kerberos.keyTabSecret is required when kerberos enabled!" .Values.kerberos.keyTabSecret }}
      {{- end }}
      {{- if .Values.queriesFileConfigMap }}
      - name:  ksql-queries
        configMap:
          name: {{ .Values.queriesFileConfigMap }}
      {{- end }}
